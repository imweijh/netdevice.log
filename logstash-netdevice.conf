input {
  udp {
    port => 5140
    type => syslog
    queue_size => 15000
  }
  tcp {
    port => 5140
    type => syslog
  }
  udp {
    port => 5150
    type => syslog
    queue_size => 15000
  }
  udp {
    port => 5160
    type => vpnlog
    queue_size => 15000
  }
}

filter {
  if [type] == "syslog" {
    if [message] =~ /AppDirector: client-IP/ { drop{} }
    if [message] =~ /TDX_HQ/ { drop{} }
    if [message] =~ /TDX_JY/ { drop{} }
    if [message] =~ /WARNING Farm/ { drop{} }
    if [message] =~ /RS server/ { drop{} }
    if [message] =~ /<190>/ and [host]=="10.xx.xx.249" { drop{} }
    if [message] =~ /10.60.6/ and [host]=="10.xx.xx.249"  { drop{} }    
    if [message] =~ /<134>/ and [host]=="10.xx.xx.249" { drop{} }
    if [message] =~ /array/ { drop{} }
    if [message] =~ /reset anti-ddos packet-trace statistic/ { drop {} }
    if [message] =~ /<11>/ and [host]=="171.xx.x.xxx" { drop{} }
    if [message] =~ /dcd/ { drop{} }
    if [message] =~ /webui/ { drop{} }
    if [message] =~ /nat by vip ip/ { drop{} }
    if [message] =~ /Unsuccessfully closed = 0/ { drop{} }  
    if [message] =~ /<190>/ and [host]=="171.xx.x.x" { drop{} }
    if [message] =~ /SETUP/ { drop{} }
    if [message] =~ /Parity error/ { drop {} }
    if [message] =~ /last message repeated/ { drop{} }
    if [message] =~ /port T-1/ { drop{} }
    if [message] =~ /SLB: Group/ { drop{} }
    if [message] =~ /INFO Farm/ { drop{} }

    grok {
      # match => [ "message", "^<%{NONNEGINT:syslog_pri}>%{GREEDYDATA:syslog_message}$" ]
      match => [ "message", "^<%{NONNEGINT:syslog_pri}>%{GREEDYDATA}$" ]
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    if [message] =~ /logged in via/ and [syslog_pri] {
      mutate {
        replace => { "syslog_pri" => "185" }
        # change syslog_pri from 182info to 185alert
      }
    }
    if [message] =~ /reload/ and [syslog_pri] {
      mutate {
        replace => { "syslog_pri" => "168" }
        # change syslog_pri to 168 emergency
      }
    }
    if [message] =~ /reset/ and [syslog_pri] {
      mutate {
        replace => { "syslog_pri" => "168" }
        # change syslog_pri to 184 emergency
      }
    }
    if [message] =~ /core dumped/ and [syslog_pri] {
      mutate {
        replace => { "syslog_pri" => "168" }
        # change syslog_pri to 184 emergency
      }
    }
    if [message] =~ /Neighbor Down/ and [syslog_pri] {
      mutate {
        replace => { "syslog_pri" => "168" }
        # change syslog_pri to 168 emergency
      }
    }
    if [message] =~ /(?i)standby/ and [syslog_pri] {
      mutate {
        replace => { "syslog_pri" => "168" }
        # change syslog_pri to 168 emergency
      }
    }

    syslog_pri {}

  }

  if [type] == "vpnlog" {
    grok {
      match => [ "message", "^<%{NONNEGINT:syslog_pri}>%{CISCOTIMESTAMP:logtime} %{DATA:vpnhost} %{GREEDYDATA:otherkv}$" ]
    }
    if [otherkv] {
       kv { source => "otherkv" }
    }
    syslog_pri {}
  }
}

output {
  if [type] == "syslog" {
    elasticsearch { index => "logstash-%{+yyyy.MM}" }
    if [syslog_severity] == "emergency" {
      udp {
        host => "server6.77"
        port => 514
        codec => line { format => "##%{received_at}|%{received_from}||syslog|NetWork|zmr|%{message}|%{syslog_severity}|1$$" }
        #codec => plain {
        #  format => "%{message}"
        #}
      }
    }

  } # end if

  if [type] == "vpnlog" {
    elasticsearch { index => "vpnlog-%{+yyyy.MM}" }
  }
} # end output
